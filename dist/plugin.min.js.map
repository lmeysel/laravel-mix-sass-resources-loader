{"version":3,"sources":["../src/plugin.js"],"names":[],"mappings":"wpBAAA,GAAM,KAAM,QAAQ,aAAR,CAAZ,CACA,GAAM,MAAO,QAAQ,MAAR,CAAb,CAEA,GAAM,KAAM,4HACO,gBACjB,GAAI,CAAC,KAAK,SAAV,CAAqB,KAAK,SAAL,CAAiB,EAAjB,CADJ,8BAAN,IAAM,sCAAN,IAAM,uBAEjB,KAAK,OAAL,CAAa,kBAAK,aAAa,MAAb,CACjB,MAAK,SAAL,CAAe,IAAf,CAAoB,KAApB,CAA0B,MAAK,SAA/B,CAA0C,EAAE,GAAF,CAAM,kBAAK,MAAK,OAAL,CAAa,SAAb,CAAwB,YAAc,CAAtC,CAAL,CAAN,CAA1C,CADiB,CAEjB,MAAK,SAAL,CAAe,IAAf,CAAoB,KAAK,OAAL,CAAa,SAAb,CAAwB,YAAc,CAAtC,CAApB,CAFY,CAAb,CAGA,CANU,mDAOI,CAAE,MAAO,CAAC,uBAAD,CAA2B,CAPxC,oDASG,MATH,CASW,CACrB,GAAM,OAAQ,OAAO,MAAP,CAAc,KAAd,CAAoB,MAApB,CAA2B,qBACtC,MAAK,IAAL,WAAqB,OAAtB,EAAiC,KAAK,IAAL,CAAU,IAAV,CAAe,WAAf,CAAlC,EACI,MAAQ,MAAK,IAAb,GAAuB,QAAvB,EAAmC,aAAa,IAAb,CAAkB,KAAK,IAAvB,CAFC,CAA3B,CAAd,CAIA,GAAM,KAAM,CAAE,OAAQ,uBAAV,CAAmC,QAAS,CAAE,UAAW,KAAK,SAAlB,CAA5C,CAAZ,CACA,MAAM,OAAN,CAAc,cAAQ,CACrB,GAAI,KAAK,OAAT,CAAkB,CACjB,KAAK,GAAL,CAAW,KAAK,OAAL,CAAa,GAAb,CAAiB,uBAAW,CAAE,aAAF,CAAX,CAAjB,CAAX,CACA,MAAO,MAAK,OACZ,CACD,KAAK,GAAL,CAAS,IAAT,CAAc,GAAd,CACA,CAND,EASA,GAAM,MAAO,OAAO,MAAP,CAAc,KAAd,CAAoB,IAApB,CAAyB,qBAAS,MAAK,IAAL,WAAqB,OAArB,EAA+B,KAAK,IAAL,CAAU,IAAV,CAAe,UAAf,CAAxC,CAAzB,CAAb,CACA,CAAC,MAAD,CAAS,MAAT,EAAiB,OAAjB,CAAyB,YAAM,CAC9B,GAAI,CAAC,KAAK,OAAL,CAAa,OAAb,CAAqB,EAArB,CAAL,CACC,KAAK,OAAL,CAAa,OAAb,CAAqB,EAArB,EAA2B,CAAC,cAAD,CAAiB,YAAjB,CAA+B,aAA/B,CAA8C,GAA9C,CAA3B,CADD,IAEK,MAAK,OAAL,CAAa,OAAb,CAAqB,EAArB,EAAyB,IAAzB,CAA8B,GAA9B,CACL,CAJD,CAKA,CA9BU,qBAAZ,CAiCA,IAAI,MAAJ,CAAW,eAAX,CAA4B,GAA5B","file":"plugin.min.js","sourcesContent":["const mix = require('laravel-mix');\nconst path = require('path');\n\nconst ext = new class {\n\tregister(...args) {\n\t\tif (!this.resources) this.resources = [];\n\t\targs.forEach(a => a instanceof Array ?\n\t\t\tthis.resources.push.apply(this.resources, a.map(r => path.resolve(__dirname, '../../../' + r))) :\n\t\t\tthis.resources.push(path.resolve(__dirname, '../../../' + a)));\n\t}\n\tdependencies() { return ['sass-resources-loader'] }\n\n\twebpackConfig(config) {\n\t\tconst rules = config.module.rules.filter(rule =>\n\t\t\t((rule.test instanceof RegExp) && rule.test.test('asdf.scss'))\n\t\t\t|| (typeof (rule.test) === 'string' && /\\.s[ac]ss$/.test(rule.test)));\n\n\t\tconst ldr = { loader: 'sass-resources-loader', options: { resources: this.resources } };\n\t\trules.forEach(rule => {\n\t\t\tif (rule.loaders) {\n\t\t\t\trule.use = rule.loaders.map(loader => ({ loader }));\n\t\t\t\tdelete rule.loaders;\n\t\t\t}\n\t\t\trule.use.push(ldr)\n\t\t});\n\n\t\t// vue loader\n\t\tconst rule = config.module.rules.find(rule => (rule.test instanceof RegExp && rule.test.test('asdf.vue')));\n\t\t['sass', 'scss'].forEach(st => {\n\t\t\tif (!rule.options.loaders[st])\n\t\t\t\trule.options.loaders[st] = ['style-loader', 'css-loader', 'sass-loader', ldr];\n\t\t\telse rule.options.loaders[st].push(ldr);\n\t\t});\n\t}\n}();\n\nmix.extend('sassResources', ext);"]}